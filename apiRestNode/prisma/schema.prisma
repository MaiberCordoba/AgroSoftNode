// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RolUsuario {
  admin
  instructor
  pasante
  aprendiz
  visitante
}

enum EstadoUsuario {
  activo
  inactivo
}

model Usuario {
  identificacion    Int           @id
  nombre            String
  apellidos         String
  fechaNacimiento   DateTime      @db.Date
  telefono          String
  correoElectronico String        @unique
  passwordHash      String
  rol               RolUsuario    @default(visitante)
  estado            EstadoUsuario @default(activo)

  actividades Actividad[]
  pasantes    Pasante[]
}

model Actividad {
  id          Int             @id @default(autoincrement())
  cultivoId   Int
  usuarioId   Int
  titulo      String
  descripcion String
  fecha       DateTime
  estado      EstadoActividad @default(ASIGNADA)

  cultivo          Cultivo          @relation(fields: [cultivoId], references: [id])
  usuario          Usuario          @relation(fields: [usuarioId], references: [identificacion])
  usosHerramientas UsoHerramienta[]
  usosProductos    UsoProducto[]
}

enum EstadoActividad {
  ASIGNADA
  COMPLETADA
  CANCELADA
}

model Cultivo {
  id           Int      @id @default(autoincrement())
  especieId    Int
  nombre       String
  unidades     Int
  activo       Boolean  @default(true)
  fechaSiembra DateTime

  especie      Especie      @relation(fields: [especieId], references: [id])
  actividades  Actividad[]
  desechos     Desecho[]
  cosechas     Cosecha[]
  plantaciones Plantacion[]
}

model Especie {
  id                Int     @id @default(autoincrement())
  nombre            String
  descripcion       String
  img               String?
  tiempoCrecimiento Int
  tipoEspecieId     Int

  tipoEspecie TipoEspecie @relation(fields: [tipoEspecieId], references: [id])
  cultivos    Cultivo[]
  semilleros  Semillero[]
}

model TipoEspecie {
  id          Int     @id @default(autoincrement())
  nombre      String
  descripcion String
  img         String?

  especies Especie[]
}

model Semillero {
  id            Int      @id @default(autoincrement())
  especieId     Int
  unidades      Int
  fechaSiembra  DateTime
  fechaEstimada DateTime

  especie Especie @relation(fields: [especieId], references: [id])
}

model Desecho {
  id            Int    @id @default(autoincrement())
  cultivoId     Int
  tipoDesechoId Int
  nombre        String
  descripcion   String

  cultivo     Cultivo     @relation(fields: [cultivoId], references: [id])
  tipoDesecho TipoDesecho @relation(fields: [tipoDesechoId], references: [id])
}

model TipoDesecho {
  id          Int    @id @default(autoincrement())
  nombre      String
  descripcion String

  desechos Desecho[]
}

model Pasante {
  id                  Int      @id @default(autoincrement())
  usuarioId           Int
  fechaInicioPasantia DateTime
  fechaFinalizacion   DateTime
  salarioHora         Int
  area                String

  usuario        Usuario       @relation(fields: [usuarioId], references: [identificacion])
  horasMensuales HoraMensual[]
}

model HoraMensual {
  id        Int    @id @default(autoincrement())
  pasanteId Int
  minutos   Int
  salario   Int
  mes       String

  pasante Pasante @relation(fields: [pasanteId], references: [id])
}

model UsoHerramienta {
  id            Int @id @default(autoincrement())
  herramientaId Int
  actividadId   Int

  herramienta Herramienta @relation(fields: [herramientaId], references: [id])
  actividad   Actividad   @relation(fields: [actividadId], references: [id])
}

model UsoProducto {
  id               Int @id @default(autoincrement())
  insumoId         Int
  actividadId      Int
  cantidadProducto Int

  insumo    Insumo    @relation(fields: [insumoId], references: [id])
  actividad Actividad @relation(fields: [actividadId], references: [id])
}

model Insumo {
  id          Int    @id @default(autoincrement())
  nombre      String
  descripcion String
  precio      Int
  unidades    Int

  usos UsoProducto[]
}

model Herramienta {
  id          Int    @id @default(autoincrement())
  loteId      Int
  nombre      String
  descripcion String
  unidades    Int

  lote Lote             @relation(fields: [loteId], references: [id])
  usos UsoHerramienta[]
}

model Lote {
  id          Int     @id @default(autoincrement())
  nombre      String
  descripcion String
  tamX        Int
  tamY        Int
  estado      Boolean @default(true)
  posX        Float
  posY        Float

  eras                 Era[]
  herramientas         Herramienta[]
  precipitaciones      Precipitacion[]
  evapotranspiraciones Evapotranspiracion[]
  sensores             Sensor[]
}

model Era {
  id     Int     @id @default(autoincrement())
  loteId Int
  tamX   Float
  tamY   Float
  posX   Float
  posY   Float
  estado Boolean @default(true)

  lote         Lote         @relation(fields: [loteId], references: [id])
  sensores     Sensor[]
  plantaciones Plantacion[]
}

model Plantacion {
  id        Int @id @default(autoincrement())
  cultivoId Int
  eraId     Int

  cultivo    Cultivo    @relation(fields: [cultivoId], references: [id])
  era        Era        @relation(fields: [eraId], references: [id])
  afecciones Afeccion[]
}

model Afeccion {
  id             Int            @id @default(autoincrement())
  plantacionId   Int
  plagaId        Int
  fechaEncuentro DateTime
  estado         EstadoAfeccion @default(SINTRATAMIENTO)

  plantacion Plantacion @relation(fields: [plantacionId], references: [id])
  plaga      Plaga      @relation(fields: [plagaId], references: [id])
  controles  Control[]
}

enum EstadoAfeccion {
  SINTRATAMIENTO
  ENCONTROL
  ELIMINADO
}

model Plaga {
  id          Int     @id @default(autoincrement())
  tipoPlagaId Int
  nombre      String
  descripcion String
  img         String?

  tipoPlaga  TipoPlaga  @relation(fields: [tipoPlagaId], references: [id])
  afecciones Afeccion[]
}

model TipoPlaga {
  id          Int    @id @default(autoincrement())
  nombre      String
  descripcion String
  img         String

  plagas Plaga[]
}

model Control {
  id            Int      @id @default(autoincrement())
  afeccionId    Int
  tipoControlId Int
  descripcion   String
  fechaControl  DateTime

  afeccion             Afeccion             @relation(fields: [afeccionId], references: [id])
  tipoControl          TipoControl          @relation(fields: [tipoControlId], references: [id])
  usosProductosControl UsoProductoControl[]
}

model TipoControl {
  id          Int    @id @default(autoincrement())
  nombre      String
  descripcion String

  controles Control[]
}

model ProductoControl {
  id              Int    @id @default(autoincrement())
  nombre          String
  precio          Int
  compuestoActivo String
  fichaTecnica    String
  contenido       Int
  tipoContenido   String
  unidades        Int

  usosProducto UsoProductoControl[]
}

model UsoProductoControl {
  id               Int @id @default(autoincrement())
  productoId       Int
  controlId        Int
  cantidadProducto Int

  producto ProductoControl @relation(fields: [productoId], references: [id])
  control  Control         @relation(fields: [controlId], references: [id])
}

model Sensor {
  id          Int        @id @default(autoincrement())
  tipoSensor  TipoSensor
  datosSensor Float
  fecha       DateTime   @default(now())
  eraId       Int?
  loteId      Int?

  lote     Lote?    @relation(fields: [loteId], references: [id])
  era      Era?     @relation(fields: [eraId], references: [id])
  umbrales Umbral[]
}

enum TipoSensor {
  TEMPERATURA
  ILUMINACION
  HUMEDAD_AMBIENTAL
  HUMEDAD_TERRENO
  PH
  VIENTO
  LLUVIA
}

model Umbral {
  id          Int   @id @default(autoincrement())
  sensorId    Int
  valorMinimo Float
  valorMaximo Float

  sensor Sensor @relation(fields: [sensorId], references: [id], onDelete: Cascade)
}

model Precipitacion {
  id     Int      @id @default(autoincrement())
  loteId Int
  fecha  DateTime
  mm     Int

  lote Lote @relation(fields: [loteId], references: [id])
}

model Evapotranspiracion {
  id                  Int      @id @default(autoincrement())
  loteId              Int
  fecha               DateTime
  milimetrosMCuadrado Int

  lote Lote @relation(fields: [loteId], references: [id])
}

model UnidadMedida {
  id     Int    @id @default(autoincrement())
  nombre String
}

model Venta {
  id             Int      @id @default(autoincrement())
  cosechaId      Int
  precioUnitario Int
  fecha          DateTime

  cosecha Cosecha @relation(fields: [cosechaId], references: [id])
}

model Cosecha {
  id        Int      @id @default(autoincrement())
  cultivoId Int
  unidades  Int
  fecha     DateTime

  cultivo Cultivo @relation(fields: [cultivoId], references: [id])
  ventas  Venta[]
}
